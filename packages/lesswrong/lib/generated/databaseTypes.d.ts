//
// GENERATED FILE
// Do not edit this file directly. Instead, start a server and run "npm run generate",
// which will cause this file to be regenerated. This file should nevertheless be
// checked in to version control.
//
// Contains Typescript signatures for database objects, generated by
// server/codegen/generateDbTypes.ts.
//
interface AdvisorRequestsCollection extends CollectionBase<DbAdvisorRequest, "AdvisorRequests"> {
}

interface DbAdvisorRequest extends DbObject {
  __collectionName?: "AdvisorRequests"
  userId: string | null
  interestedInMetaculus: boolean | null
  jobAds: any /*{"definitions":[{"blackbox":true}]}*/
  createdAt: Date | null
  legacyData: any /*{"definitions":[{"blackbox":true}]}*/
}

interface BansCollection extends CollectionBase<DbBan, "Bans"> {
}

interface DbBan extends DbObject {
  __collectionName?: "Bans"
  expirationDate: Date | null
  userId: string | null
  ip: string | null
  reason: string | null
  comment: string | null
  properties: any /*{"definitions":[{"blackbox":true}]}*/
  createdAt: Date | null
  legacyData: any /*{"definitions":[{"blackbox":true}]}*/
}

interface BooksCollection extends CollectionBase<DbBook, "Books"> {
}

interface DbBook extends DbObject {
  __collectionName?: "Books"
  postedAt: Date | null
  title: string | null
  subtitle: string | null
  tocTitle: string | null
  collectionId: string | null
  number: number | null
  postIds: Array<string> | null
  sequenceIds: Array<string> | null
  displaySequencesAsGrid: boolean | null
  hideProgressBar: boolean | null
  showChapters: boolean | null
  contents: EditableFieldContents
  contents_latest: string | null
  createdAt: Date | null
  legacyData: any /*{"definitions":[{"blackbox":true}]}*/
}

interface ChaptersCollection extends CollectionBase<DbChapter, "Chapters"> {
}

interface DbChapter extends DbObject {
  __collectionName?: "Chapters"
  title: string | null
  subtitle: string | null
  number: number | null
  sequenceId: string | null
  postIds: Array<string> | null
  contents: EditableFieldContents
  contents_latest: string | null
  createdAt: Date | null
  legacyData: any /*{"definitions":[{"blackbox":true}]}*/
}

interface ClientIdsCollection extends CollectionBase<DbClientId, "ClientIds"> {
}

interface DbClientId extends DbObject {
  __collectionName?: "ClientIds"
  clientId: string | null
  firstSeenReferrer: string | null
  firstSeenLandingPage: string | null
  userIds: Array<string> | null
  createdAt: Date | null
  legacyData: any /*{"definitions":[{"blackbox":true}]}*/
}

interface CollectionsCollection extends CollectionBase<DbCollection, "Collections"> {
}

interface DbCollection extends DbObject {
  __collectionName?: "Collections"
  userId: string | null
  title: string | null
  slug: string | null
  gridImageId: string | null
  firstPageLink: string | null
  hideStartReadingButton: boolean | null
  noindex: boolean | null
  contents: EditableFieldContents
  contents_latest: string | null
  createdAt: Date | null
  legacyData: any /*{"definitions":[{"blackbox":true}]}*/
}

interface CommentModeratorActionsCollection extends CollectionBase<DbCommentModeratorAction, "CommentModeratorActions"> {
}

interface DbCommentModeratorAction extends DbObject {
  __collectionName?: "CommentModeratorActions"
  commentId: string | null
  type: "downvotedCommentAlert" | null
  endedAt: Date | null
  createdAt: Date | null
  legacyData: any /*{"definitions":[{"blackbox":true}]}*/
}

interface CommentsCollection extends CollectionBase<DbComment, "Comments"> {
}

interface DbComment extends DbObject {
  __collectionName?: "Comments"
  parentCommentId: string | null
  topLevelCommentId: string | null
  postedAt: Date | null
  author: string | null
  postId: string | null
  tagId: string | null
  tagCommentType: "SUBFORUM" | "DISCUSSION" | null
  subforumStickyPriority: number | null
  userId: string | null
  userIP: string | null
  userAgent: string | null
  referrer: string | null
  authorIsUnreviewed: boolean | null
  answer: boolean | null
  parentAnswerId: string | null
  directChildrenCount: number | null
  descendentCount: number | null
  shortform: boolean | null
  shortformFrontpage: boolean | null
  nominatedForReview: string | null
  reviewingForReview: string | null
  lastSubthreadActivity: Date | null
  postVersion: string | null
  promoted: boolean | null
  promotedByUserId: string | null
  promotedAt: Date | null
  hideKarma: boolean | null
  legacy: boolean | null
  legacyId: string | null
  legacyPoll: boolean | null
  legacyParentId: string | null
  retracted: boolean | null
  deleted: boolean | null
  deletedPublic: boolean | null
  deletedReason: string | null
  deletedDate: Date | null
  deletedByUserId: string | null
  spam: boolean | null
  repliesBlockedUntil: Date | null
  needsReview: boolean | null
  reviewedByUserId: string | null
  hideAuthor: boolean | null
  moderatorHat: boolean | null
  hideModeratorHat: boolean | null
  isPinnedOnProfile: boolean | null
  title: string | null
  relevantTagIds: Array<string> | null
  debateResponse: boolean | null
  rejected: boolean | null
  modGPTAnalysis: string | null
  modGPTRecommendation: string | null
  rejectedReason: string | null
  rejectedByUserId: string | null
  af: boolean | null
  suggestForAlignmentUserIds: Array<string> | null
  reviewForAlignmentUserId: string | null
  afDate: Date | null
  moveToAlignmentUserId: string | null
  agentFoundationsId: string | null
  createdAt: Date | null
  legacyData: any /*{"definitions":[{"blackbox":true}]}*/
  contents: EditableFieldContents
  contents_latest: string | null
  pingbacks: any /*{"definitions":[{}]}*/
  voteCount: number | null
  baseScore: number | null
  extendedScore: any /*{"definitions":[{"type":"JSON"}]}*/
  score: number | null
  inactive: boolean | null
  afBaseScore: number | null
  afExtendedScore: any /*{"definitions":[{"type":"JSON"}]}*/
  afVoteCount: number | null
}

interface ConversationsCollection extends CollectionBase<DbConversation, "Conversations"> {
}

interface DbConversation extends DbObject {
  __collectionName?: "Conversations"
  title: string | null
  participantIds: Array<string> | null
  latestActivity: Date | null
  af: boolean | null
  messageCount: number | null
  moderator: boolean | null
  archivedByIds: Array<string> | null
  createdAt: Date | null
  legacyData: any /*{"definitions":[{"blackbox":true}]}*/
}

interface CronHistoriesCollection extends CollectionBase<DbCronHistory, "CronHistories"> {
}

interface DbCronHistory extends DbObject {
  __collectionName?: "CronHistories"
  intendedAt: Date
  name: string
  startedAt: Date
  finishedAt: Date | null
  result: any /*{"definitions":[{"blackbox":true}]}*/
}

interface DatabaseMetadataCollection extends CollectionBase<DbDatabaseMetadata, "DatabaseMetadata"> {
}

interface DbDatabaseMetadata extends DbObject {
  __collectionName?: "DatabaseMetadata"
  name: string | null
  value: any /*{"definitions":[{"blackbox":true}]}*/
  createdAt: Date | null
  legacyData: any /*{"definitions":[{"blackbox":true}]}*/
}

interface DebouncerEventsCollection extends CollectionBase<DbDebouncerEvents, "DebouncerEvents"> {
}

interface DbDebouncerEvents extends DbObject {
  __collectionName?: "DebouncerEvents"
  name: string | null
  af: boolean | null
  dispatched: boolean | null
  failed: boolean | null
  delayTime: Date | null
  upperBoundTime: Date | null
  key: string | null
  pendingEvents: Array<string> | null
  createdAt: Date | null
  legacyData: any /*{"definitions":[{"blackbox":true}]}*/
}

interface DigestPostsCollection extends CollectionBase<DbDigestPost, "DigestPosts"> {
}

interface DbDigestPost extends DbObject {
  __collectionName?: "DigestPosts"
  digestId: string | null
  postId: string | null
  emailDigestStatus: string | null
  onsiteDigestStatus: string | null
  createdAt: Date | null
  legacyData: any /*{"definitions":[{"blackbox":true}]}*/
}

interface DigestsCollection extends CollectionBase<DbDigest, "Digests"> {
}

interface DbDigest extends DbObject {
  __collectionName?: "Digests"
  num: number | null
  startDate: Date | null
  endDate: Date | null
  publishedDate: Date | null
  createdAt: Date | null
  legacyData: any /*{"definitions":[{"blackbox":true}]}*/
}

interface EmailTokensCollection extends CollectionBase<DbEmailTokens, "EmailTokens"> {
}

interface DbEmailTokens extends DbObject {
  __collectionName?: "EmailTokens"
  token: string | null
  tokenType: string | null
  userId: string | null
  usedAt: Date | null
  params: any /*{"definitions":[{"blackbox":true}]}*/
  createdAt: Date | null
  legacyData: any /*{"definitions":[{"blackbox":true}]}*/
}

interface FeaturedResourcesCollection extends CollectionBase<DbFeaturedResource, "FeaturedResources"> {
}

interface DbFeaturedResource extends DbObject {
  __collectionName?: "FeaturedResources"
  title: string | null
  body: string | null
  ctaText: string | null
  ctaUrl: string | null
  expiresAt: Date | null
  createdAt: Date | null
  legacyData: any /*{"definitions":[{"blackbox":true}]}*/
}

interface GardenCodesCollection extends CollectionBase<DbGardenCode, "GardenCodes"> {
}

interface DbGardenCode extends DbObject {
  __collectionName?: "GardenCodes"
  code: string | null
  title: string | null
  userId: string | null
  slug: string | null
  startTime: Date | null
  endTime: Date | null
  fbLink: string | null
  type: string | null
  hidden: boolean | null
  deleted: boolean | null
  afOnly: boolean | null
  createdAt: Date | null
  legacyData: any /*{"definitions":[{"blackbox":true}]}*/
  contents: EditableFieldContents
  contents_latest: string | null
  pingbacks: any /*{"definitions":[{}]}*/
}

interface ImagesCollection extends CollectionBase<DbImages, "Images"> {
}

interface DbImages extends DbObject {
  __collectionName?: "Images"
  originalUrl: string | null
  cdnHostedUrl: string | null
  createdAt: Date | null
  legacyData: any /*{"definitions":[{"blackbox":true}]}*/
}

interface LWEventsCollection extends CollectionBase<DbLWEvent, "LWEvents"> {
}

interface DbLWEvent extends DbObject {
  __collectionName?: "LWEvents"
  userId: string | null
  name: string | null
  documentId: string | null
  important: boolean | null
  properties: any /*{"definitions":[{"blackbox":true}]}*/
  intercom: boolean | null
  createdAt: Date | null
  legacyData: any /*{"definitions":[{"blackbox":true}]}*/
}

interface LegacyDataCollection extends CollectionBase<DbLegacyData, "LegacyData"> {
}

interface DbLegacyData extends DbObject {
  __collectionName?: "LegacyData"
  objectId: string | null
  collectionName: string | null
  createdAt: Date | null
  legacyData: any /*{"definitions":[{"blackbox":true}]}*/
}

interface LocalgroupsCollection extends CollectionBase<DbLocalgroup, "Localgroups"> {
}

interface DbLocalgroup extends DbObject {
  __collectionName?: "Localgroups"
  name: string | null
  nameInAnotherLanguage: string | null
  organizerIds: Array<string> | null
  lastActivity: Date | null
  types: Array<string> | null
  categories: Array<string> | null
  isOnline: boolean | null
  mongoLocation: any /*{"definitions":[{"blackbox":true}]}*/
  googleLocation: any /*{"definitions":[{"blackbox":true}]}*/
  location: string | null
  contactInfo: string | null
  facebookLink: string | null
  facebookPageLink: string | null
  meetupLink: string | null
  slackLink: string | null
  website: string | null
  bannerImageId: string | null
  inactive: boolean | null
  deleted: boolean | null
  salesforceId: string | null
  contents: EditableFieldContents
  contents_latest: string | null
  createdAt: Date | null
  legacyData: any /*{"definitions":[{"blackbox":true}]}*/
}

interface MessagesCollection extends CollectionBase<DbMessage, "Messages"> {
}

interface DbMessage extends DbObject {
  __collectionName?: "Messages"
  userId: string | null
  conversationId: string | null
  noEmail: boolean | null
  contents: EditableFieldContents
  contents_latest: string | null
  createdAt: Date | null
  legacyData: any /*{"definitions":[{"blackbox":true}]}*/
}

interface MigrationsCollection extends CollectionBase<DbMigration, "Migrations"> {
}

interface DbMigration extends DbObject {
  __collectionName?: "Migrations"
  name: string | null
  started: Date | null
  finished: boolean | null
  succeeded: boolean | null
  createdAt: Date | null
  legacyData: any /*{"definitions":[{"blackbox":true}]}*/
}

interface ModerationTemplatesCollection extends CollectionBase<DbModerationTemplate, "ModerationTemplates"> {
}

interface DbModerationTemplate extends DbObject {
  __collectionName?: "ModerationTemplates"
  name: string | null
  collectionName: "Messages" | "Comments" | "Rejections" | null
  order: number | null
  deleted: boolean | null
  createdAt: Date | null
  legacyData: any /*{"definitions":[{"blackbox":true}]}*/
  contents: EditableFieldContents
  contents_latest: string | null
}

interface ModeratorActionsCollection extends CollectionBase<DbModeratorAction, "ModeratorActions"> {
}

interface DbModeratorAction extends DbObject {
  __collectionName?: "ModeratorActions"
  userId: string | null
  type: "rateLimitOnePerDay" | "rateLimitOnePerThreeDays" | "rateLimitOnePerWeek" | "rateLimitOnePerFortnight" | "rateLimitOnePerMonth" | "rateLimitThreeCommentsPerPost" | "recentlyDownvotedContentAlert" | "lowAverageKarmaCommentAlert" | "lowAverageKarmaPostAlert" | "negativeUserKarmaAlert" | "movedPostToDraft" | "sentModeratorMessage" | "manualFlag" | "votingPatternWarningDelivered" | "flaggedForNDMs" | "autoBlockedFromSendingDMs" | "rejectedPost" | "rejectedComment" | "potentialTargetedDownvoting" | null
  endedAt: Date | null
  createdAt: Date | null
  legacyData: any /*{"definitions":[{"blackbox":true}]}*/
}

interface NotificationsCollection extends CollectionBase<DbNotification, "Notifications"> {
}

interface DbNotification extends DbObject {
  __collectionName?: "Notifications"
  userId: string | null
  documentId: string | null
  documentType: string | null
  extraData: any /*{"definitions":[{"blackbox":true}]}*/
  link: string | null
  title: string | null
  message: string | null
  type: string | null
  deleted: boolean | null
  viewed: boolean | null
  emailed: boolean | null
  waitingForBatch: boolean | null
  createdAt: Date | null
  legacyData: any /*{"definitions":[{"blackbox":true}]}*/
}

interface PageCacheCollection extends CollectionBase<DbPageCacheEntry, "PageCache"> {
}

interface DbPageCacheEntry extends DbObject {
  __collectionName?: "PageCache"
  path: string | null
  abTestGroups: any /*{"definitions":[{"blackbox":true}]}*/
  bundleHash: string | null
  renderedAt: Date | null
  expiresAt: Date | null
  ttlMs: number | null
  renderResult: {
    ssrBody: string,
    headers: Array<string>,
    serializedApolloState: string,
    serializedForeignApolloState: string,
    jssSheets: string,
    status: number,
    redirectUrl: string,
    relevantAbTestGroups: any /*{"definitions":[{"blackbox":true}]}*/,
    allAbTestGroups: any /*{"definitions":[{"blackbox":true}]}*/,
    themeOptions: any /*{"definitions":[{"blackbox":true}]}*/,
    renderedAt: Date,
    timings: any /*{"definitions":[{"blackbox":true}]}*/,
  } | null
  createdAt: Date | null
  legacyData: any /*{"definitions":[{"blackbox":true}]}*/
}

interface PetrovDayLaunchsCollection extends CollectionBase<DbPetrovDayLaunch, "PetrovDayLaunchs"> {
}

interface DbPetrovDayLaunch extends DbObject {
  __collectionName?: "PetrovDayLaunchs"
  launchCode: string | null
  hashedLaunchCode: string | null
  userId: string | null
  createdAt: Date | null
  legacyData: any /*{"definitions":[{"blackbox":true}]}*/
}

interface PodcastEpisodesCollection extends CollectionBase<DbPodcastEpisode, "PodcastEpisodes"> {
}

interface DbPodcastEpisode extends DbObject {
  __collectionName?: "PodcastEpisodes"
  podcastId: string | null
  title: string | null
  episodeLink: string | null
  externalEpisodeId: string | null
  createdAt: Date | null
  legacyData: any /*{"definitions":[{"blackbox":true}]}*/
}

interface PodcastsCollection extends CollectionBase<DbPodcast, "Podcasts"> {
}

interface DbPodcast extends DbObject {
  __collectionName?: "Podcasts"
  title: string | null
  applePodcastLink: string | null
  spotifyPodcastLink: string | null
  createdAt: Date | null
  legacyData: any /*{"definitions":[{"blackbox":true}]}*/
}

interface PostEmbeddingsCollection extends CollectionBase<DbPostEmbedding, "PostEmbeddings"> {
}

interface DbPostEmbedding extends DbObject {
  __collectionName?: "PostEmbeddings"
  postId: string
  postHash: string
  lastGeneratedAt: Date
  model: string
  embeddings: Array<number>
  createdAt: Date | null
  legacyData: any /*{"definitions":[{"blackbox":true}]}*/
}

interface PostRecommendationsCollection extends CollectionBase<DbPostRecommendation, "PostRecommendations"> {
}

interface DbPostRecommendation extends DbObject {
  __collectionName?: "PostRecommendations"
  userId: string | null
  clientId: string | null
  postId: string
  strategyName: string
  strategySettings: any /*{"definitions":[{"blackbox":true}]}*/
  recommendationCount: number
  lastRecommendedAt: Date
  clickedAt: Date | null
  createdAt: Date | null
  legacyData: any /*{"definitions":[{"blackbox":true}]}*/
}

interface PostRelationsCollection extends CollectionBase<DbPostRelation, "PostRelations"> {
}

interface DbPostRelation extends DbObject {
  __collectionName?: "PostRelations"
  type: string | null
  sourcePostId: string | null
  targetPostId: string | null
  order: number | null
  createdAt: Date | null
  legacyData: any /*{"definitions":[{"blackbox":true}]}*/
}

interface PostsCollection extends CollectionBase<DbPost, "Posts"> {
}

interface DbPost extends DbObject {
  __collectionName?: "Posts"
  postedAt: Date | null
  modifiedAt: Date | null
  url: string | null
  postCategory: "post" | "linkpost" | "question" | null
  title: string | null
  slug: string | null
  viewCount: number | null
  lastCommentedAt: Date | null
  clickCount: number | null
  deletedDraft: boolean | null
  status: number | null
  isFuture: boolean | null
  sticky: boolean | null
  stickyPriority: number | null
  userIP: string | null
  userAgent: string | null
  referrer: string | null
  author: string | null
  userId: string | null
  question: boolean | null
  authorIsUnreviewed: boolean | null
  readTimeMinutesOverride: number | null
  submitToFrontpage: boolean | null
  hiddenRelatedQuestion: boolean | null
  originalPostRelationSourceId: string | null
  shortform: boolean | null
  canonicalSource: string | null
  nominationCount2018: number | null
  nominationCount2019: number | null
  reviewCount2018: number | null
  reviewCount2019: number | null
  reviewCount: number | null
  reviewVoteCount: number | null
  positiveReviewVoteCount: number | null
  reviewVoteScoreAF: number | null
  reviewVotesAF: Array<number> | null
  reviewVoteScoreHighKarma: number | null
  reviewVotesHighKarma: Array<number> | null
  reviewVoteScoreAllKarma: number | null
  reviewVotesAllKarma: Array<number> | null
  finalReviewVoteScoreHighKarma: number | null
  finalReviewVotesHighKarma: Array<number> | null
  finalReviewVoteScoreAllKarma: number | null
  finalReviewVotesAllKarma: Array<number> | null
  finalReviewVoteScoreAF: number | null
  finalReviewVotesAF: Array<number> | null
  lastCommentPromotedAt: Date | null
  tagRelevance: any /*{"definitions":[{"blackbox":true}]}*/
  noIndex: boolean | null
  rsvps: Array<{
    name: string,
    email: string,
    nonPublic: boolean,
    response: "yes" | "maybe" | "no",
    userId: string | null,
    createdAt: Date,
  }> | null
  activateRSVPs: boolean | null
  nextDayReminderSent: boolean | null
  onlyVisibleToLoggedIn: boolean | null
  onlyVisibleToEstablishedAccounts: boolean | null
  hideFromRecentDiscussions: boolean | null
  votingSystem: string | null
  podcastEpisodeId: string | null
  forceAllowType3Audio: boolean | null
  legacy: boolean | null
  legacyId: string | null
  legacySpam: boolean | null
  feedId: string | null
  feedLink: string | null
  curatedDate: Date | null
  metaDate: Date | null
  suggestForCuratedUserIds: Array<string> | null
  frontpageDate: Date | null
  collectionTitle: string | null
  coauthorStatuses: Array<{
    userId: string,
    confirmed: boolean,
    requested: boolean,
  }> | null
  hasCoauthorPermission: boolean | null
  socialPreviewImageId: string | null
  socialPreviewImageAutoUrl: string | null
  socialPreview: {
    imageId: string | null,
    text: string | null,
  } | null
  fmCrosspost: {
    isCrosspost: boolean,
    hostedHere: boolean | null,
    foreignPostId: string | null,
  } | null
  canonicalSequenceId: string | null
  canonicalCollectionSlug: string | null
  canonicalBookId: string | null
  canonicalNextPostSlug: string | null
  canonicalPrevPostSlug: string | null
  unlisted: boolean | null
  disableRecommendation: boolean | null
  defaultRecommendation: boolean | null
  hideFromPopularComments: boolean | null
  draft: boolean | null
  wasEverUndrafted: boolean
  meta: boolean | null
  hideFrontpageComments: boolean | null
  maxBaseScore: number | null
  scoreExceeded2Date: Date | null
  scoreExceeded30Date: Date | null
  scoreExceeded45Date: Date | null
  scoreExceeded75Date: Date | null
  scoreExceeded125Date: Date | null
  scoreExceeded200Date: Date | null
  bannedUserIds: Array<string> | null
  commentsLocked: boolean | null
  commentsLockedToAccountsCreatedAfter: Date | null
  organizerIds: Array<string> | null
  groupId: string | null
  eventType: string | null
  isEvent: boolean | null
  reviewedByUserId: string | null
  reviewForCuratedUserId: string | null
  startTime: Date | null
  localStartTime: Date | null
  endTime: Date | null
  localEndTime: Date | null
  eventRegistrationLink: string | null
  joinEventLink: string | null
  onlineEvent: boolean | null
  globalEvent: boolean | null
  mongoLocation: any /*{"definitions":[{"blackbox":true}]}*/
  googleLocation: any /*{"definitions":[{"blackbox":true}]}*/
  location: string | null
  contactInfo: string | null
  facebookLink: string | null
  meetupLink: string | null
  website: string | null
  eventImageId: string | null
  types: Array<string> | null
  metaSticky: boolean | null
  sharingSettings: any /*{"definitions":[{"blackbox":true}]}*/
  shareWithUsers: Array<string> | null
  linkSharingKey: string | null
  linkSharingKeyUsedBy: Array<string> | null
  commentSortOrder: string | null
  hideAuthor: boolean | null
  sideCommentsCache: any /*{"definitions":[{}]}*/
  sideCommentVisibility: string | null
  moderationStyle: string | null
  ignoreRateLimits: boolean | null
  hideCommentKarma: boolean | null
  commentCount: number | null
  topLevelCommentCount: number | null
  criticismTipsDismissed: boolean | null
  debate: boolean | null
  collabEditorDialogue: boolean | null
  rejected: boolean | null
  rejectedReason: string | null
  rejectedByUserId: string | null
  subforumTagId: string | null
  af: boolean | null
  afDate: Date | null
  afCommentCount: number | null
  afLastCommentedAt: Date | null
  afSticky: boolean | null
  suggestForAlignmentUserIds: Array<string> | null
  reviewForAlignmentUserId: string | null
  agentFoundationsId: string | null
  createdAt: Date | null
  legacyData: any /*{"definitions":[{"blackbox":true}]}*/
  contents: EditableFieldContents
  contents_latest: string | null
  pingbacks: any /*{"definitions":[{}]}*/
  moderationGuidelines: EditableFieldContents
  moderationGuidelines_latest: string | null
  customHighlight: EditableFieldContents
  customHighlight_latest: string | null
  voteCount: number | null
  baseScore: number | null
  extendedScore: any /*{"definitions":[{"type":"JSON"}]}*/
  score: number | null
  inactive: boolean | null
  afBaseScore: number | null
  afExtendedScore: any /*{"definitions":[{"type":"JSON"}]}*/
  afVoteCount: number | null
}

interface RSSFeedsCollection extends CollectionBase<DbRSSFeed, "RSSFeeds"> {
}

interface DbRSSFeed extends DbObject {
  __collectionName?: "RSSFeeds"
  userId: string | null
  ownedByUser: boolean | null
  displayFullContent: boolean | null
  nickname: string | null
  url: string | null
  status: string | null
  rawFeed: any /*{"definitions":[{}]}*/
  setCanonicalUrl: boolean | null
  importAsDraft: boolean | null
  createdAt: Date | null
  legacyData: any /*{"definitions":[{"blackbox":true}]}*/
}

interface ReadStatusesCollection extends CollectionBase<DbReadStatus, "ReadStatuses"> {
}

interface DbReadStatus extends DbObject {
  __collectionName?: "ReadStatuses"
  postId: string | null
  tagId: string | null
  userId: string | null
  isRead: boolean | null
  lastUpdated: Date | null
  createdAt: Date | null
  legacyData: any /*{"definitions":[{"blackbox":true}]}*/
}

interface ReportsCollection extends CollectionBase<DbReport, "Reports"> {
}

interface DbReport extends DbObject {
  __collectionName?: "Reports"
  userId: string | null
  reportedUserId: string | null
  commentId: string | null
  postId: string | null
  link: string | null
  claimedUserId: string | null
  description: string | null
  closedAt: Date | null
  markedAsSpam: boolean | null
  reportedAsSpam: boolean | null
  createdAt: Date | null
  legacyData: any /*{"definitions":[{"blackbox":true}]}*/
}

interface ReviewVotesCollection extends CollectionBase<DbReviewVote, "ReviewVotes"> {
}

interface DbReviewVote extends DbObject {
  __collectionName?: "ReviewVotes"
  userId: string | null
  postId: string | null
  qualitativeScore: number | null
  quadraticScore: number | null
  comment: string | null
  year: string | null
  dummy: boolean | null
  reactions: Array<string> | null
  createdAt: Date | null
  legacyData: any /*{"definitions":[{"blackbox":true}]}*/
}

interface RevisionsCollection extends CollectionBase<DbRevision, "Revisions"> {
}

interface DbRevision extends DbObject {
  __collectionName?: "Revisions"
  documentId: string | null
  collectionName: CollectionNameString
  fieldName: string | null
  editedAt: Date | null
  autosaveTimeoutStart: Date | null
  updateType: "initial" | "patch" | "minor" | "major" | null
  version: string | null
  commitMessage: string | null
  userId: string | null
  draft: boolean | null
  originalContents: {
    type: string,
    data: string,
  } | null
  html: string | null
  wordCount: number | null
  changeMetrics: any /*{"definitions":[{"blackbox":true}]}*/
  createdAt: Date | null
  legacyData: any /*{"definitions":[{"blackbox":true}]}*/
  voteCount: number | null
  baseScore: number | null
  extendedScore: any /*{"definitions":[{"type":"JSON"}]}*/
  score: number | null
  inactive: boolean | null
  afBaseScore: number | null
  afExtendedScore: any /*{"definitions":[{"type":"JSON"}]}*/
  afVoteCount: number | null
}

interface SequencesCollection extends CollectionBase<DbSequence, "Sequences"> {
}

interface DbSequence extends DbObject {
  __collectionName?: "Sequences"
  userId: string | null
  title: string | null
  gridImageId: string | null
  bannerImageId: string | null
  curatedOrder: number | null
  userProfileOrder: number | null
  draft: boolean | null
  isDeleted: boolean | null
  canonicalCollectionSlug: string | null
  hidden: boolean | null
  hideFromAuthorPage: boolean | null
  noindex: boolean | null
  af: boolean | null
  contents: EditableFieldContents
  contents_latest: string | null
  createdAt: Date | null
  legacyData: any /*{"definitions":[{"blackbox":true}]}*/
}

interface SessionsCollection extends CollectionBase<DbSession, "Sessions"> {
}

interface DbSession extends DbObject {
  __collectionName?: "Sessions"
  session: any /*{"definitions":[{"blackbox":true}]}*/
  expires: Date | null
  lastModified: Date | null
}

interface SpotlightsCollection extends CollectionBase<DbSpotlight, "Spotlights"> {
}

interface DbSpotlight extends DbObject {
  __collectionName?: "Spotlights"
  documentId: string | null
  documentType: SpotlightDocumentType
  position: number | null
  duration: number | null
  customTitle: string | null
  customSubtitle: string | null
  headerTitle: string | null
  headerTitleLeftColor: string | null
  headerTitleRightColor: string | null
  lastPromotedAt: Date | null
  draft: boolean | null
  showAuthor: boolean
  imageFade: boolean
  spotlightImageId: string | null
  spotlightDarkImageId: string | null
  createdAt: Date | null
  legacyData: any /*{"definitions":[{"blackbox":true}]}*/
  description: EditableFieldContents
  description_latest: string | null
}

interface SubscriptionsCollection extends CollectionBase<DbSubscription, "Subscriptions"> {
}

interface DbSubscription extends DbObject {
  __collectionName?: "Subscriptions"
  userId: string | null
  state: "subscribed" | "suppressed" | null
  documentId: string | null
  collectionName: CollectionNameString
  deleted: boolean | null
  type: "newComments" | "newShortform" | "newPosts" | "newRelatedQuestions" | "newEvents" | "newReplies" | "newTagPosts" | "newDebateComments" | "newDialogueMessages" | "newPublishedDialogueMessages" | null
  createdAt: Date | null
  legacyData: any /*{"definitions":[{"blackbox":true}]}*/
}

interface TagFlagsCollection extends CollectionBase<DbTagFlag, "TagFlags"> {
}

interface DbTagFlag extends DbObject {
  __collectionName?: "TagFlags"
  name: string | null
  deleted: boolean | null
  slug: string | null
  order: number | null
  createdAt: Date | null
  legacyData: any /*{"definitions":[{"blackbox":true}]}*/
  contents: EditableFieldContents
  contents_latest: string | null
}

interface TagRelsCollection extends CollectionBase<DbTagRel, "TagRels"> {
}

interface DbTagRel extends DbObject {
  __collectionName?: "TagRels"
  tagId: string | null
  postId: string | null
  deleted: boolean | null
  userId: string | null
  backfilled: boolean | null
  createdAt: Date | null
  legacyData: any /*{"definitions":[{"blackbox":true}]}*/
  voteCount: number | null
  baseScore: number | null
  extendedScore: any /*{"definitions":[{"type":"JSON"}]}*/
  score: number | null
  inactive: boolean | null
  afBaseScore: number | null
  afExtendedScore: any /*{"definitions":[{"type":"JSON"}]}*/
  afVoteCount: number | null
}

interface TagsCollection extends CollectionBase<DbTag, "Tags"> {
}

interface DbTag extends DbObject {
  __collectionName?: "Tags"
  name: string | null
  shortName: string | null
  subtitle: string | null
  slug: string | null
  oldSlugs: Array<string> | null
  core: boolean | null
  isPostType: boolean | null
  suggestedAsFilter: boolean | null
  defaultOrder: number | null
  descriptionTruncationCount: number | null
  postCount: number | null
  userId: string | null
  adminOnly: boolean | null
  canEditUserIds: Array<string> | null
  charsAdded: number | null
  charsRemoved: number | null
  deleted: boolean | null
  lastCommentedAt: Date | null
  lastSubforumCommentAt: Date | null
  needsReview: boolean | null
  reviewedByUserId: string | null
  wikiGrade: number | null
  wikiOnly: boolean | null
  bannerImageId: string | null
  squareImageId: string | null
  tagFlagsIds: Array<string> | null
  lesswrongWikiImportRevision: string | null
  lesswrongWikiImportSlug: string | null
  lesswrongWikiImportCompleted: boolean | null
  htmlWithContributorAnnotations: string | null
  contributionStats: any /*{"definitions":[{"blackbox":true}]}*/
  introSequenceId: string | null
  postsDefaultSortOrder: string | null
  canVoteOnRels: Array<"userOwns" | "userOwnsOnlyUpvote" | "guests" | "members" | "admins" | "sunshineRegiment" | "alignmentForumAdmins" | "alignmentForum" | "alignmentVoters" | "podcasters" | "canBypassPostRateLimit" | "trustLevel1" | "canModeratePersonal" | "canSuggestCuration" | "debaters" | "realAdmins"> | null
  isSubforum: boolean | null
  subforumModeratorIds: Array<string> | null
  subforumIntroPostId: string | null
  parentTagId: string | null
  subTagIds: Array<string> | null
  autoTagModel: string | null
  autoTagPrompt: string | null
  noindex: boolean | null
  createdAt: Date | null
  legacyData: any /*{"definitions":[{"blackbox":true}]}*/
  description: EditableFieldContents
  description_latest: string | null
  subforumWelcomeText: EditableFieldContents
  subforumWelcomeText_latest: string | null
  moderationGuidelines: EditableFieldContents
  moderationGuidelines_latest: string | null
}

interface TypingIndicatorsCollection extends CollectionBase<DbTypingIndicator, "TypingIndicators"> {
}

interface DbTypingIndicator extends DbObject {
  __collectionName?: "TypingIndicators"
  userId: string
  documentId: string
  lastUpdated: Date
  createdAt: Date | null
  legacyData: any /*{"definitions":[{"blackbox":true}]}*/
}

interface UserActivitiesCollection extends CollectionBase<DbUserActivity, "UserActivities"> {
}

interface DbUserActivity extends DbObject {
  __collectionName?: "UserActivities"
  visitorId: string | null
  type: "userId" | "clientId" | null
  startDate: Date | null
  endDate: Date | null
  activityArray: Array<number> | null
  createdAt: Date | null
  legacyData: any /*{"definitions":[{"blackbox":true}]}*/
}

interface UserMostValuablePostsCollection extends CollectionBase<DbUserMostValuablePost, "UserMostValuablePosts"> {
}

interface DbUserMostValuablePost extends DbObject {
  __collectionName?: "UserMostValuablePosts"
  userId: string | null
  postId: string | null
  deleted: boolean | null
  createdAt: Date | null
  legacyData: any /*{"definitions":[{"blackbox":true}]}*/
}

interface UserRateLimitsCollection extends CollectionBase<DbUserRateLimit, "UserRateLimits"> {
}

interface DbUserRateLimit extends DbObject {
  __collectionName?: "UserRateLimits"
  userId: string
  type: "allComments" | "allPosts"
  intervalUnit: "minutes" | "hours" | "days" | "weeks"
  intervalLength: number
  actionsPerInterval: number
  endedAt: Date | null
  createdAt: Date | null
  legacyData: any /*{"definitions":[{"blackbox":true}]}*/
}

interface UserTagRelsCollection extends CollectionBase<DbUserTagRel, "UserTagRels"> {
}

interface DbUserTagRel extends DbObject {
  __collectionName?: "UserTagRels"
  tagId: string | null
  userId: string | null
  subforumLastVisitedAt: Date | null
  subforumShowUnreadInSidebar: boolean
  subforumEmailNotifications: boolean
  subforumHideIntroPost: boolean | null
  createdAt: Date | null
  legacyData: any /*{"definitions":[{"blackbox":true}]}*/
}

interface UsersCollection extends CollectionBase<DbUser, "Users"> {
}

interface DbUser extends DbObject {
  __collectionName?: "Users"
  username: string | null
  emails: Array<any /*{"definitions":[{}]}*/> | null
  isAdmin: boolean | null
  profile: any /*{"definitions":[{"blackbox":true}]}*/
  services: any /*{"definitions":[{"blackbox":true}]}*/
  displayName: string | null
  previousDisplayName: string | null
  email: string | null
  slug: string | null
  noindex: boolean | null
  groups: Array<string> | null
  lwWikiImport: boolean | null
  theme: {
    name: "default" | "dark" | "auto" | null,
    siteThemeOverride: any /*{"definitions":[{"blackbox":true}]}*/,
  } | null
  lastUsedTimezone: string | null
  whenConfirmationEmailSent: Date | null
  legacy: boolean | null
  commentSorting: string | null
  sortDraftsBy: string | null
  reactPaletteStyle: "listView" | "gridView" | null
  noKibitz: boolean | null
  showHideKarmaOption: boolean | null
  showPostAuthorCard: boolean | null
  hideIntercom: boolean | null
  markDownPostEditor: boolean | null
  hideElicitPredictions: boolean | null
  hideAFNonMemberInitialWarning: boolean | null
  noSingleLineComments: boolean | null
  noCollapseCommentsPosts: boolean | null
  noCollapseCommentsFrontpage: boolean | null
  hideCommunitySection: boolean | null
  expandedFrontpageSections: {
    community: boolean | null,
    recommendations: boolean | null,
    quickTakes: boolean | null,
    popularComments: boolean | null,
  } | null
  showCommunityInRecentDiscussion: boolean | null
  hidePostsRecommendations: boolean | null
  petrovOptOut: boolean | null
  acceptedTos: boolean | null
  hideNavigationSidebar: boolean | null
  currentFrontpageFilter: string | null
  frontpageFilterSettings: any /*{"definitions":[{"blackbox":true}]}*/
  hideFrontpageFilterSettingsDesktop: boolean | null
  allPostsTimeframe: string | null
  allPostsFilter: string | null
  allPostsSorting: string | null
  allPostsShowLowKarma: boolean | null
  allPostsIncludeEvents: boolean | null
  allPostsHideCommunity: boolean | null
  allPostsOpenSettings: boolean | null
  draftsListSorting: string | null
  draftsListShowArchived: boolean | null
  draftsListShowShared: boolean | null
  lastNotificationsCheck: Date | null
  karma: number | null
  goodHeartTokens: number | null
  moderationStyle: string | null
  moderatorAssistance: boolean | null
  collapseModerationGuidelines: boolean | null
  bannedUserIds: Array<string> | null
  bannedPersonalUserIds: Array<string> | null
  bookmarkedPostsMetadata: Array<any /*{"definitions":[{}]}*/> | null
  hiddenPostsMetadata: Array<any /*{"definitions":[{}]}*/> | null
  legacyId: string | null
  deleted: boolean | null
  voteBanned: boolean | null
  nullifyVotes: boolean | null
  deleteContent: boolean | null
  banned: Date | null
  auto_subscribe_to_my_posts: boolean | null
  auto_subscribe_to_my_comments: boolean | null
  autoSubscribeAsOrganizer: boolean | null
  notificationCommentsOnSubscribedPost: {
    channel: "none" | "onsite" | "email" | "both",
    batchingFrequency: "realtime" | "daily" | "weekly",
    timeOfDayGMT: number,
    dayOfWeekGMT: string,
  } | null
  notificationShortformContent: {
    channel: "none" | "onsite" | "email" | "both",
    batchingFrequency: "realtime" | "daily" | "weekly",
    timeOfDayGMT: number,
    dayOfWeekGMT: string,
  } | null
  notificationRepliesToMyComments: {
    channel: "none" | "onsite" | "email" | "both",
    batchingFrequency: "realtime" | "daily" | "weekly",
    timeOfDayGMT: number,
    dayOfWeekGMT: string,
  } | null
  notificationRepliesToSubscribedComments: {
    channel: "none" | "onsite" | "email" | "both",
    batchingFrequency: "realtime" | "daily" | "weekly",
    timeOfDayGMT: number,
    dayOfWeekGMT: string,
  } | null
  notificationSubscribedUserPost: {
    channel: "none" | "onsite" | "email" | "both",
    batchingFrequency: "realtime" | "daily" | "weekly",
    timeOfDayGMT: number,
    dayOfWeekGMT: string,
  } | null
  notificationPostsInGroups: {
    channel: "none" | "onsite" | "email" | "both",
    batchingFrequency: "realtime" | "daily" | "weekly",
    timeOfDayGMT: number,
    dayOfWeekGMT: string,
  } | null
  notificationSubscribedTagPost: {
    channel: "none" | "onsite" | "email" | "both",
    batchingFrequency: "realtime" | "daily" | "weekly",
    timeOfDayGMT: number,
    dayOfWeekGMT: string,
  } | null
  notificationPrivateMessage: {
    channel: "none" | "onsite" | "email" | "both",
    batchingFrequency: "realtime" | "daily" | "weekly",
    timeOfDayGMT: number,
    dayOfWeekGMT: string,
  } | null
  notificationSharedWithMe: {
    channel: "none" | "onsite" | "email" | "both",
    batchingFrequency: "realtime" | "daily" | "weekly",
    timeOfDayGMT: number,
    dayOfWeekGMT: string,
  } | null
  notificationAlignmentSubmissionApproved: {
    channel: "none" | "onsite" | "email" | "both",
    batchingFrequency: "realtime" | "daily" | "weekly",
    timeOfDayGMT: number,
    dayOfWeekGMT: string,
  } | null
  notificationEventInRadius: {
    channel: "none" | "onsite" | "email" | "both",
    batchingFrequency: "realtime" | "daily" | "weekly",
    timeOfDayGMT: number,
    dayOfWeekGMT: string,
  } | null
  notificationRSVPs: {
    channel: "none" | "onsite" | "email" | "both",
    batchingFrequency: "realtime" | "daily" | "weekly",
    timeOfDayGMT: number,
    dayOfWeekGMT: string,
  } | null
  notificationGroupAdministration: {
    channel: "none" | "onsite" | "email" | "both",
    batchingFrequency: "realtime" | "daily" | "weekly",
    timeOfDayGMT: number,
    dayOfWeekGMT: string,
  } | null
  notificationCommentsOnDraft: {
    channel: "none" | "onsite" | "email" | "both",
    batchingFrequency: "realtime" | "daily" | "weekly",
    timeOfDayGMT: number,
    dayOfWeekGMT: string,
  } | null
  notificationPostsNominatedReview: {
    channel: "none" | "onsite" | "email" | "both",
    batchingFrequency: "realtime" | "daily" | "weekly",
    timeOfDayGMT: number,
    dayOfWeekGMT: string,
  } | null
  notificationSubforumUnread: {
    channel: "none" | "onsite" | "email" | "both",
    batchingFrequency: "realtime" | "daily" | "weekly",
    timeOfDayGMT: number,
    dayOfWeekGMT: string,
  } | null
  notificationNewMention: {
    channel: "none" | "onsite" | "email" | "both",
    batchingFrequency: "realtime" | "daily" | "weekly",
    timeOfDayGMT: number,
    dayOfWeekGMT: string,
  } | null
  notificationDialogueMessages: {
    channel: "none" | "onsite" | "email" | "both",
    batchingFrequency: "realtime" | "daily" | "weekly",
    timeOfDayGMT: number,
    dayOfWeekGMT: string,
  } | null
  notificationPublishedDialogueMessages: {
    channel: "none" | "onsite" | "email" | "both",
    batchingFrequency: "realtime" | "daily" | "weekly",
    timeOfDayGMT: number,
    dayOfWeekGMT: string,
  } | null
  notificationDebateCommentsOnSubscribedPost: {
    channel: "none" | "onsite" | "email" | "both",
    batchingFrequency: "realtime" | "daily" | "weekly",
    timeOfDayGMT: number,
    dayOfWeekGMT: string,
  } | null
  notificationDebateReplies: {
    channel: "none" | "onsite" | "email" | "both",
    batchingFrequency: "realtime" | "daily" | "weekly",
    timeOfDayGMT: number,
    dayOfWeekGMT: string,
  } | null
  karmaChangeNotifierSettings: {
    updateFrequency: "disabled" | "daily" | "weekly" | "realtime",
    timeOfDayGMT: number,
    dayOfWeekGMT: "Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday",
    showNegativeKarma: boolean,
  } | null
  karmaChangeLastOpened: Date | null
  karmaChangeBatchStart: Date | null
  emailSubscribedToCurated: boolean | null
  subscribedToDigest: boolean | null
  unsubscribeFromAll: boolean | null
  hideSubscribePoke: boolean | null
  hideMeetupsPoke: boolean | null
  hideHomeRHS: boolean | null
  frontpagePostCount: number | null
  sequenceCount: number | null
  sequenceDraftCount: number | null
  mongoLocation: any /*{"definitions":[{"blackbox":true}]}*/
  googleLocation: any /*{"definitions":[{"blackbox":true}]}*/
  location: string | null
  mapLocation: any /*{"definitions":[{"blackbox":true}]}*/
  mapLocationSet: boolean | null
  mapMarkerText: string | null
  htmlMapMarkerText: string | null
  nearbyEventsNotifications: boolean | null
  nearbyEventsNotificationsLocation: any /*{"definitions":[{"blackbox":true}]}*/
  nearbyEventsNotificationsMongoLocation: any /*{"definitions":[{"blackbox":true}]}*/
  nearbyEventsNotificationsRadius: number | null
  nearbyPeopleNotificationThreshold: number | null
  hideFrontpageMap: boolean | null
  hideTaggingProgressBar: boolean | null
  hideFrontpageBookAd: boolean | null
  hideFrontpageBook2019Ad: boolean | null
  hideFrontpageBook2020Ad: boolean | null
  sunshineNotes: string | null
  sunshineFlagged: boolean | null
  needsReview: boolean | null
  sunshineSnoozed: boolean | null
  snoozedUntilContentCount: number | null
  reviewedByUserId: string | null
  reviewedAt: Date | null
  afKarma: number | null
  voteCount: number | null
  smallUpvoteCount: number | null
  smallDownvoteCount: number | null
  bigUpvoteCount: number | null
  bigDownvoteCount: number | null
  voteReceivedCount: number | null
  smallUpvoteReceivedCount: number | null
  smallDownvoteReceivedCount: number | null
  bigUpvoteReceivedCount: number | null
  bigDownvoteReceivedCount: number | null
  usersContactedBeforeReview: Array<string> | null
  fullName: string | null
  shortformFeedId: string | null
  viewUnreviewedComments: boolean | null
  partiallyReadSequences: Array<{
    sequenceId: string,
    collectionId: string,
    lastReadPostId: string,
    nextPostId: string,
    numRead: number,
    numTotal: number,
    lastReadTime: Date,
  }> | null
  beta: boolean | null
  reviewVotesQuadratic: boolean | null
  reviewVotesQuadratic2019: boolean | null
  reviewVotesQuadratic2020: boolean | null
  petrovPressedButtonDate: Date | null
  petrovLaunchCodeDate: Date | null
  defaultToCKEditor: boolean | null
  signUpReCaptchaRating: number | null
  oldSlugs: Array<string> | null
  noExpandUnreadCommentsReview: boolean | null
  postCount: number | null
  maxPostCount: number | null
  commentCount: number | null
  maxCommentCount: number | null
  tagRevisionCount: number | null
  abTestKey: string | null
  abTestOverrides: any /*{"definitions":[{"type":"JSON","blackbox":true}]}*/
  reenableDraftJs: boolean | null
  walledGardenInvite: boolean | null
  hideWalledGardenUI: boolean | null
  walledGardenPortalOnboarded: boolean | null
  taggingDashboardCollapsed: boolean | null
  usernameUnset: boolean | null
  paymentEmail: string | null
  paymentInfo: string | null
  profileImageId: string | null
  jobTitle: string | null
  organization: string | null
  careerStage: Array<string> | null
  website: string | null
  fmCrosspostUserId: string | null
  linkedinProfileURL: string | null
  facebookProfileURL: string | null
  twitterProfileURL: string | null
  githubProfileURL: string | null
  profileTagIds: Array<string> | null
  organizerOfGroupIds: Array<string> | null
  programParticipation: Array<string> | null
  postingDisabled: boolean | null
  allCommentingDisabled: boolean | null
  commentingOnOtherUsersDisabled: boolean | null
  conversationsDisabled: boolean | null
  acknowledgedNewUserGuidelines: boolean | null
  subforumPreferredLayout: "card" | "list" | null
  experiencedIn: Array<string> | null
  interestedIn: Array<string> | null
  allowDatadogSessionReplay: boolean | null
  afPostCount: number | null
  afCommentCount: number | null
  afSequenceCount: number | null
  afSequenceDraftCount: number | null
  reviewForAlignmentForumUserId: string | null
  afApplicationText: string | null
  afSubmittedApplication: boolean | null
  createdAt: Date | null
  legacyData: any /*{"definitions":[{"blackbox":true}]}*/
  moderationGuidelines: EditableFieldContents
  moderationGuidelines_latest: string | null
  howOthersCanHelpMe: EditableFieldContents
  howOthersCanHelpMe_latest: string | null
  howICanHelpOthers: EditableFieldContents
  howICanHelpOthers_latest: string | null
  biography: EditableFieldContents
  biography_latest: string | null
  recommendationSettings: {
    frontpage: {
      method: string,
      count: number,
      scoreOffset: number,
      scoreExponent: number,
      personalBlogpostModifier: number,
      frontpageModifier: number,
      curatedModifier: number,
      onlyUnread: boolean,
    },
    frontpageEA: {
      method: string,
      count: number,
      scoreOffset: number,
      scoreExponent: number,
      personalBlogpostModifier: number,
      frontpageModifier: number,
      curatedModifier: number,
      onlyUnread: boolean,
    },
    recommendationspage: {
      method: string,
      count: number,
      scoreOffset: number,
      scoreExponent: number,
      personalBlogpostModifier: number,
      frontpageModifier: number,
      curatedModifier: number,
      onlyUnread: boolean,
    },
  } | null
}

interface VotesCollection extends CollectionBase<DbVote, "Votes"> {
}

interface DbVote extends DbObject {
  __collectionName?: "Votes"
  documentId: string | null
  collectionName: CollectionNameString
  userId: string | null
  authorIds: Array<string> | null
  voteType: string | null
  extendedVoteType: any /*{"definitions":[{"type":"JSON"}]}*/
  power: number | null
  afPower: number | null
  cancelled: boolean | null
  isUnvote: boolean | null
  votedAt: Date | null
  documentIsAf: boolean | null
  createdAt: Date | null
  legacyData: any /*{"definitions":[{"blackbox":true}]}*/
}

interface CollectionsByName {
  AdvisorRequests: AdvisorRequestsCollection
  Bans: BansCollection
  Books: BooksCollection
  Chapters: ChaptersCollection
  ClientIds: ClientIdsCollection
  Collections: CollectionsCollection
  CommentModeratorActions: CommentModeratorActionsCollection
  Comments: CommentsCollection
  Conversations: ConversationsCollection
  CronHistories: CronHistoriesCollection
  DatabaseMetadata: DatabaseMetadataCollection
  DebouncerEvents: DebouncerEventsCollection
  DigestPosts: DigestPostsCollection
  Digests: DigestsCollection
  EmailTokens: EmailTokensCollection
  FeaturedResources: FeaturedResourcesCollection
  GardenCodes: GardenCodesCollection
  Images: ImagesCollection
  LWEvents: LWEventsCollection
  LegacyData: LegacyDataCollection
  Localgroups: LocalgroupsCollection
  Messages: MessagesCollection
  Migrations: MigrationsCollection
  ModerationTemplates: ModerationTemplatesCollection
  ModeratorActions: ModeratorActionsCollection
  Notifications: NotificationsCollection
  PageCache: PageCacheCollection
  PetrovDayLaunchs: PetrovDayLaunchsCollection
  PodcastEpisodes: PodcastEpisodesCollection
  Podcasts: PodcastsCollection
  PostEmbeddings: PostEmbeddingsCollection
  PostRecommendations: PostRecommendationsCollection
  PostRelations: PostRelationsCollection
  Posts: PostsCollection
  RSSFeeds: RSSFeedsCollection
  ReadStatuses: ReadStatusesCollection
  Reports: ReportsCollection
  ReviewVotes: ReviewVotesCollection
  Revisions: RevisionsCollection
  Sequences: SequencesCollection
  Sessions: SessionsCollection
  Spotlights: SpotlightsCollection
  Subscriptions: SubscriptionsCollection
  TagFlags: TagFlagsCollection
  TagRels: TagRelsCollection
  Tags: TagsCollection
  TypingIndicators: TypingIndicatorsCollection
  UserActivities: UserActivitiesCollection
  UserMostValuablePosts: UserMostValuablePostsCollection
  UserRateLimits: UserRateLimitsCollection
  UserTagRels: UserTagRelsCollection
  Users: UsersCollection
  Votes: VotesCollection
}

interface ObjectsByCollectionName {
  AdvisorRequests: DbAdvisorRequest
  Bans: DbBan
  Books: DbBook
  Chapters: DbChapter
  ClientIds: DbClientId
  Collections: DbCollection
  CommentModeratorActions: DbCommentModeratorAction
  Comments: DbComment
  Conversations: DbConversation
  CronHistories: DbCronHistory
  DatabaseMetadata: DbDatabaseMetadata
  DebouncerEvents: DbDebouncerEvents
  DigestPosts: DbDigestPost
  Digests: DbDigest
  EmailTokens: DbEmailTokens
  FeaturedResources: DbFeaturedResource
  GardenCodes: DbGardenCode
  Images: DbImages
  LWEvents: DbLWEvent
  LegacyData: DbLegacyData
  Localgroups: DbLocalgroup
  Messages: DbMessage
  Migrations: DbMigration
  ModerationTemplates: DbModerationTemplate
  ModeratorActions: DbModeratorAction
  Notifications: DbNotification
  PageCache: DbPageCacheEntry
  PetrovDayLaunchs: DbPetrovDayLaunch
  PodcastEpisodes: DbPodcastEpisode
  Podcasts: DbPodcast
  PostEmbeddings: DbPostEmbedding
  PostRecommendations: DbPostRecommendation
  PostRelations: DbPostRelation
  Posts: DbPost
  RSSFeeds: DbRSSFeed
  ReadStatuses: DbReadStatus
  Reports: DbReport
  ReviewVotes: DbReviewVote
  Revisions: DbRevision
  Sequences: DbSequence
  Sessions: DbSession
  Spotlights: DbSpotlight
  Subscriptions: DbSubscription
  TagFlags: DbTagFlag
  TagRels: DbTagRel
  Tags: DbTag
  TypingIndicators: DbTypingIndicator
  UserActivities: DbUserActivity
  UserMostValuablePosts: DbUserMostValuablePost
  UserRateLimits: DbUserRateLimit
  UserTagRels: DbUserTagRel
  Users: DbUser
  Votes: DbVote
}

